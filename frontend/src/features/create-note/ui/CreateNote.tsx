import { useEffect, useState } from "react";
import { noteStore } from "../../../entities/note/model/note.store";
import { userStore } from "../../../entities/user/model/user.store";
import { observer } from "mobx-react-lite";

export const CreateNote = observer(() => {
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);

  useEffect(() => {
    userStore.fetchProfile();
  }, []);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    const userId = userStore.user?.[0]?.id;

    if (!userId) {
      console.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
      return;
    }

    if (!title.trim() || !content.trim()) return;

    setIsSubmitting(true);
    try {
      await noteStore.createNote({
        title: title.trim(),
        content: content.trim(),
        createdAt: "",
        updatedAt: "",
        // user_id: userId
      });
      setTitle("");
      setContent("");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏", err);
    } finally {
      setIsSubmitting(false);
    }
  };

  if (!userStore.user) {
    return (
      <div className="create-note-auth-warning">
        <div className="emoji">üîê</div>
        <p>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫</p>
      </div>
    );
  }

  return (
    <>
      <div className="create-note-wrapper">
        <div className="create-note-header">
          <div className="create-note-dot" />
          <h2 className="create-note-title">–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞</h2>
        </div>

        <form className="create-note-form" onSubmit={handleSubmit}>
          <div>
            <label className="create-note-label">üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
            <input
              type="text"
              className="create-note-input"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏..."
              disabled={isSubmitting}
            />
          </div>

          <div>
            <label className="create-note-label">üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ</label>
            <textarea
              className="create-note-input create-note-textarea"
              value={content}
              onChange={(e) => setContent(e.target.value)}
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏... –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Markdown!"
              disabled={isSubmitting}
            />
          </div>

          <button
            type="submit"
            className="submit-button"
            disabled={isSubmitting || !title.trim() || !content.trim()}
          >
            {isSubmitting ? (
              <>
                <div className="spinner" /> –°–æ–∑–¥–∞–Ω–∏–µ...
              </>
            ) : (
              <>
                <span>‚ú®</span> –°–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É
              </>
            )}
          </button>
        </form>
      </div>
    </>
  );
});
